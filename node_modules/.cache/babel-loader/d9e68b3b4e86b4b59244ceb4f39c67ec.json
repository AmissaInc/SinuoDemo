{"ast":null,"code":"import _classCallCheck from \"/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/src/shared/components/form/ToggleButton.jsx\",\n    _this = this;\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ToggleButtonField = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToggleButtonField, _PureComponent);\n\n  function ToggleButtonField() {\n    _classCallCheck(this, ToggleButtonField);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToggleButtonField).apply(this, arguments));\n  }\n\n  _createClass(ToggleButtonField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          defaultChecked = _this$props.defaultChecked;\n      onChange(defaultChecked);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          disabled = _this$props2.disabled,\n          value = _this$props2.value,\n          onChange = _this$props2.onChange;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"toggle-btn__input\",\n        type: \"checkbox\",\n        name: name,\n        onChange: onChange,\n        checked: value,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"toggle-btn__input-label\",\n        onClick: function onClick() {\n          return onChange(!value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, \"Toggle\"));\n    }\n  }]);\n\n  return ToggleButtonField;\n}(PureComponent);\n\nToggleButtonField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired\n};\nToggleButtonField.defaultProps = {\n  defaultChecked: false,\n  disabled: false\n};\n\nvar renderToggleButtonField = function renderToggleButtonField(props) {\n  var input = props.input,\n      defaultChecked = props.defaultChecked,\n      disabled = props.disabled;\n  return /*#__PURE__*/React.createElement(ToggleButtonField, Object.assign({}, input, {\n    defaultChecked: defaultChecked,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n};\n\nrenderToggleButtonField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nrenderToggleButtonField.defaultProps = {\n  defaultChecked: false,\n  disabled: false\n};\nexport default renderToggleButtonField;","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/sinuo_demo/src/shared/components/form/ToggleButton.jsx"],"names":["React","PureComponent","PropTypes","ToggleButtonField","props","onChange","defaultChecked","name","disabled","value","propTypes","func","isRequired","string","bool","oneOfType","defaultProps","renderToggleButtonField","input","shape"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,iB;;;;;;;;;;;wCAiBgB;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,cADA,eACAA,cADA;AAElBD,MAAAA,QAAQ,CAACC,cAAD,CAAR;AACD;;;6BAEQ;AAAA,yBAGH,KAAKF,KAHF;AAAA,UAELG,IAFK,gBAELA,IAFK;AAAA,UAECC,QAFD,gBAECA,QAFD;AAAA,UAEWC,KAFX,gBAEWA,KAFX;AAAA,UAEkBJ,QAFlB,gBAEkBA,QAFlB;AAKP,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAEE,IAHR;AAIE,QAAA,QAAQ,EAAEF,QAJZ;AAKE,QAAA,OAAO,EAAEI,KALX;AAME,QAAA,QAAQ,EAAED,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eASE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,yBAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMH,QAAQ,CAAC,CAACI,KAAF,CAAd;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CADF;AAkBD;;;;EA7C6BR,a;;AAA1BE,iB,CACGO,S,GAAY;AACjBL,EAAAA,QAAQ,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADR;AAEjBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFN;AAGjBN,EAAAA,cAAc,EAAEJ,SAAS,CAACY,IAHT;AAIjBN,EAAAA,QAAQ,EAAEN,SAAS,CAACY,IAJH;AAKjBL,EAAAA,KAAK,EAAEP,SAAS,CAACa,SAAV,CAAoB,CACzBb,SAAS,CAACW,MADe,EAEzBX,SAAS,CAACY,IAFe,CAApB,EAGJF;AARc,C;AADfT,iB,CAYGa,Y,GAAe;AACpBV,EAAAA,cAAc,EAAE,KADI;AAEpBE,EAAAA,QAAQ,EAAE;AAFU,C;;AAoCxB,IAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACb,KAAD,EAAW;AAAA,MACjCc,KADiC,GACGd,KADH,CACjCc,KADiC;AAAA,MAC1BZ,cAD0B,GACGF,KADH,CAC1BE,cAD0B;AAAA,MACVE,QADU,GACGJ,KADH,CACVI,QADU;AAGzC,sBACE,oBAAC,iBAAD,oBACMU,KADN;AAEE,IAAA,cAAc,EAAEZ,cAFlB;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAVD;;AAYAS,uBAAuB,CAACP,SAAxB,GAAoC;AAClCQ,EAAAA,KAAK,EAAEhB,SAAS,CAACiB,KAAV,CAAgB;AACrBd,IAAAA,QAAQ,EAAEH,SAAS,CAACS,IADC;AAErBJ,IAAAA,IAAI,EAAEL,SAAS,CAACW;AAFK,GAAhB,EAGJD,UAJ+B;AAKlCN,EAAAA,cAAc,EAAEJ,SAAS,CAACY,IALQ;AAMlCN,EAAAA,QAAQ,EAAEN,SAAS,CAACY;AANc,CAApC;AASAG,uBAAuB,CAACD,YAAxB,GAAuC;AACrCV,EAAAA,cAAc,EAAE,KADqB;AAErCE,EAAAA,QAAQ,EAAE;AAF2B,CAAvC;AAKA,eAAeS,uBAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ToggleButtonField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    defaultChecked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    defaultChecked: false,\n    disabled: false,\n  };\n\n  componentDidMount() {\n    const { onChange, defaultChecked } = this.props;\n    onChange(defaultChecked);\n  }\n\n  render() {\n    const {\n      name, disabled, value, onChange,\n    } = this.props;\n\n    return (\n      <div className=\"toggle-btn\">\n        <input\n          className=\"toggle-btn__input\"\n          type=\"checkbox\"\n          name={name}\n          onChange={onChange}\n          checked={value}\n          disabled={disabled}\n        />\n        <button\n          type=\"button\"\n          className=\"toggle-btn__input-label\"\n          onClick={() => onChange(!value)}\n        >Toggle\n        </button>\n      </div>\n    );\n  }\n}\n\nconst renderToggleButtonField = (props) => {\n  const { input, defaultChecked, disabled } = props;\n\n  return (\n    <ToggleButtonField\n      {...input}\n      defaultChecked={defaultChecked}\n      disabled={disabled}\n    />\n  );\n};\n\nrenderToggleButtonField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nrenderToggleButtonField.defaultProps = {\n  defaultChecked: false,\n  disabled: false,\n};\n\nexport default renderToggleButtonField;\n"]},"metadata":{},"sourceType":"module"}